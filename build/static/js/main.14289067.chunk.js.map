{"version":3,"sources":["components/LabelTypeSelector.tsx","mutations/printRequestMutation.ts","types/index.ts","factories/PrintRequestFactory.ts","types/graphql-global-types.ts","components/PrintButton.tsx","components/Printers.tsx","components/ActionButtons.tsx","models/barcodeGenerators/BwipBarcodeGenerator.ts","models/barcodeGenerators/JsBarcodeBarcodeGenerator.ts","models/barcodes.ts","components/LabelDesigner.tsx","components/TextLabelInput.tsx","components/BarcodeLabelInput.tsx","components/LabelInput.tsx","components/FieldList.tsx","factories/CanvasFieldFactory.ts","hooks/layoutReducer/index.ts","queries/labelTypesQuery.ts","components/Loading.tsx","components/SprintPlanning.tsx","hooks/index.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["LabelTypeSelector","selectedLabelType","labelTypes","dispatch","items","map","labelType","disabled","name","key","className","onClick","e","type","gql","CanvasFont","isCanvasTextField","field","undefined","fontSize","BarcodeType","Font","Rotation","buildPrintRequest","canvasFields","layouts","buildLayout","reduce","memo","canvasField","textFields","push","buildTextField","barcodeFields","buildBarcodeField","canvasTextField","_","pick","canvasBarcodeField","PrintButton","selectedPrinterName","useMutation","printRequestMutation","print","data","loading","error","console","log","preventDefault","variables","printer","printRequest","Printers","printers","onChange","options","i","value","hostname","target","ActionButtons","fields","useState","setSelectedPrinterName","useEffect","length","xmlns","viewBox","d","printerName","BwipBarcodeTypes","getBarcodeType","barcodeField","barcodeType","code128","code39","datamatrix","ean13","Error","memoize","Promise","resolve","reject","detachedCanvas","document","createElement","bcid","text","canvasValue","scaleX","cellWidth","scaleY","is2D","drawnHeight","height","toCanvas","err","cvs","toDataURL","getFormatByBarcodeType","JsBarcode","format","width","drawnCellWidth","displayValue","textMargin","margin","getMousePosition","ctx","rect","canvas","getBoundingClientRect","x","clientX","left","right","y","clientY","top","bottom","LabelDesigner","state","canvasRef","useRef","parentRef","current","getContext","computedStyle","getComputedStyle","canvasToParentScale","parseInt","getPropertyValue","slice","addEventListener","throttle","leading","all","img","Image","onload","bwipBarcodeGenerator","jsBarcodeBarcodeGenerator","then","barcode","src","clearRect","canvasDimensions","fillStyle","fillRect","filter","forEach","canvasRotation","save","translate","canvasX","canvasY","rotate","textAlign","textBaseline","font","canvasFont","fillText","restore","drawImage","ref","min","max","step","parseFloat","TextLabelInput","onInputChange","htmlFor","id","BarcodeLabelInput","FontFamilySelector","onSelect","proportional","title","mono","BarcodeTypeSelector","LabelInput","superSelectedCanvasField","selectedCanvasField","divRef","inputRef","scrollIntoView","highlightInputText","ChildLabelInput","select","behavior","prop","updates","currentTarget","style","fontFamily","opacity","href","Helper","message","FieldList","layout","labels","Object","assign","rotation","north","buildCanvasTextField","textField","xRatio","yRatio","fontSizeRatio","drawnWidth","textMetrics","measureText","buildCanvasBarcodeField","cellWidthRatio","buildCanvasField","isTextField","padStart","substr","east","Math","PI","south","west","initialState","canvasMousePosition","isDragging","init","queryParams","hasOwnProperty","JSON","parse","initialQueryParams","reducer","action","setCanvasFields","rotateAntiClockWise","rotateClockWise","hitCanvasField","draggingOffset","builderOptions","round","newCanvasTextField","newCanvasBarcodeField","position","find","useLayoutReducer","useQueryParams","setQueryParams","useReducer","newQueryParams","stringify","Loading","version","ry","ErrorPage","CSSTransition","timeout","in","appear","classNames","SprintPlanning","fn","delay","useLazyQuery","labelTypesQuery","onCompleted","loadLabelTypes","called","timer","setTimeout","clearTimeout","useOnDeleteKey","activeElement","nodeName","preserveAspectRatio","client","ApolloClient","App","Boolean","window","location","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.14289067.chunk.js","sourcesContent":["import React, { Dispatch } from \"react\";\n\nimport { Printers_printers_labelType } from \"../queries/types/Printers\";\nimport { Action } from \"../hooks/layoutReducer/actions\";\n\nimport { LabelTypes_labelTypes } from \"../queries/types/LabelTypes\";\n\nconst LabelTypeSelector: React.FC<{\n  selectedLabelType?: Printers_printers_labelType;\n  labelTypes?: LabelTypes_labelTypes[];\n  dispatch: Dispatch<Action>;\n}> = ({ selectedLabelType, labelTypes = [], dispatch }) => {\n  const items = labelTypes.map(labelType => {\n    const disabled = selectedLabelType?.name === labelType.name;\n\n    return (\n      <li key={labelType.name}>\n        <button\n          className=\"btn btn-transition w-full mt-2 capitalize\"\n          disabled={disabled}\n          onClick={e => {\n            dispatch({ type: \"SET_LABEL_TYPE\", labelType });\n          }}\n        >\n          {labelType.name}\n        </button>\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"flex flex-col-reverse\">\n      <ul className=\"mt-2 p-3\">{items}</ul>\n    </div>\n  );\n};\n\nexport default LabelTypeSelector;\n","import { gql } from \"apollo-boost\";\n\nexport default gql`\n  mutation Print($printRequest: PrintRequest!, $printer: String!) {\n    print(printRequest: $printRequest, printer: $printer) {\n      jobId\n    }\n  }\n`;\n","import { BarcodeField, TextField } from \"./graphql-global-types\";\n\nexport type Field = BarcodeField | TextField;\n\nexport const isTextField = (field: Field): field is TextField => {\n  return (field as TextField).fontSize !== undefined;\n};\n\ninterface ICanvasField {\n  canvasX: number;\n  canvasY: number;\n  drawnWidth: number;\n  drawnHeight: number;\n  canvasRotation: number; // Angle to be rotated in radians\n}\n\nexport interface CanvasTextField extends TextField, ICanvasField {\n  canvasFont: CanvasFont;\n}\n\nexport interface CanvasBarcodeField extends BarcodeField, ICanvasField {\n  canvasValue: string;\n  drawnCellWidth: number;\n  img?: HTMLImageElement;\n}\n\nexport type CanvasField = CanvasTextField | CanvasBarcodeField;\n\nexport const isCanvasTextField = (\n  field: CanvasTextField | CanvasBarcodeField\n): field is CanvasTextField => {\n  return (field as CanvasTextField).fontSize !== undefined;\n};\n\nexport enum CanvasFont {\n  mono = \"courier\",\n  proportional = \"Helvetica\"\n}\n\nexport interface CanvasPosition {\n  x: number;\n  y: number;\n}\n\nexport interface TwoDimensional {\n  width: number;\n  height: number;\n}\n","import _ from \"lodash\";\n\nimport {\n  CanvasBarcodeField,\n  CanvasField,\n  CanvasTextField,\n  isCanvasTextField\n} from \"../types\";\nimport {\n  BarcodeField,\n  Layout,\n  PrintRequest,\n  TextField\n} from \"../types/graphql-global-types\";\n\nexport const buildPrintRequest = (\n  canvasFields: CanvasField[]\n): PrintRequest => {\n  return {\n    layouts: buildLayout(canvasFields)\n  };\n};\n\nconst buildLayout = (canvasFields: CanvasField[]): Layout[] => {\n  const layout: Layout = canvasFields.reduce<Layout>(\n    (memo, canvasField) => {\n      if (isCanvasTextField(canvasField)) {\n        memo.textFields && memo.textFields.push(buildTextField(canvasField));\n      } else {\n        memo.barcodeFields &&\n          memo.barcodeFields.push(buildBarcodeField(canvasField));\n      }\n      return memo;\n    },\n    { textFields: [], barcodeFields: [] }\n  );\n\n  // Always just one (but could change)\n  return [layout];\n};\n\nconst buildTextField = (canvasTextField: CanvasTextField): TextField => {\n  return _.pick(canvasTextField, [\n    \"fontSize\",\n    \"font\",\n    \"rotation\",\n    \"value\",\n    \"x\",\n    \"y\"\n  ]);\n};\n\nconst buildBarcodeField = (\n  canvasBarcodeField: CanvasBarcodeField\n): BarcodeField => {\n  return _.pick(canvasBarcodeField, [\n    \"x\",\n    \"y\",\n    \"value\",\n    \"cellWidth\",\n    \"height\",\n    \"rotation\",\n    \"barcodeType\"\n  ]);\n};\n","/* tslint:disable */\n/* eslint-disable */\n// This file was automatically generated and should not be edited.\n\n//==============================================================\n// START Enums and Input Objects\n//==============================================================\n\n/**\n *  The type of barcode\n */\nexport enum BarcodeType {\n  code128 = \"code128\",\n  code39 = \"code39\",\n  datamatrix = \"datamatrix\",\n  ean13 = \"ean13\"\n}\n\n/**\n *  The type of font\n */\nexport enum Font {\n  mono = \"mono\",\n  proportional = \"proportional\"\n}\n\n/**\n *  The rotation of this field\n */\nexport enum Rotation {\n  east = \"east\",\n  north = \"north\",\n  south = \"south\",\n  west = \"west\"\n}\n\n/**\n *  A field representing a barcode\n */\nexport interface BarcodeField {\n  x: number;\n  y: number;\n  rotation?: Rotation | null;\n  cellWidth: number;\n  height?: number | null;\n  barcodeType: BarcodeType;\n  value: string;\n}\n\n/**\n *  An explicit stating of the size of a label\n */\nexport interface LabelSize {\n  width: number;\n  height: number;\n  displacement: number;\n}\n\n/**\n *  The contents (barcodes and text) of a single label\n */\nexport interface Layout {\n  barcodeFields?: BarcodeField[] | null;\n  textFields?: TextField[] | null;\n  labelSize?: LabelSize | null;\n}\n\n/**\n *  A sequence of layouts, each representing one label\n */\nexport interface PrintRequest {\n  layouts: Layout[];\n}\n\n/**\n *  A field representing some text\n */\nexport interface TextField {\n  x: number;\n  y: number;\n  rotation?: Rotation | null;\n  font?: Font | null;\n  fontSize: number;\n  value: string;\n}\n\n//==============================================================\n// END Enums and Input Objects\n//==============================================================\n","import React from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\n\nimport printRequestMutation from \"../mutations/printRequestMutation\";\nimport {\n  Print,\n  PrintVariables\n} from \"../mutations/types/Print\";\nimport { buildPrintRequest } from \"../factories/PrintRequestFactory\";\nimport { CanvasField } from \"../types\";\n\nconst PrintButton: React.FC<{\n  selectedPrinterName: string;\n  disabled: boolean;\n  canvasFields: CanvasField[];\n}> = ({ selectedPrinterName, disabled, canvasFields }) => {\n  const [print, { data, loading, error }] = useMutation<\n    Print,\n    PrintVariables\n  >(printRequestMutation);\n\n  // TODO: Do something more helpful with errors\n  if (error) console.error(error);\n\n  const onClick = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n\n    return print({\n      variables: {\n        printer: selectedPrinterName,\n        printRequest: buildPrintRequest(canvasFields)\n      }\n    });\n  };\n\n  // TODO: Do something with jobIds\n  console.log(data);\n\n  return (\n    <button\n      disabled={disabled || loading}\n      onClick={onClick}\n      className=\"btn btn-transition px-8\"\n    >\n      Print\n    </button>\n  );\n};\n\nexport default PrintButton;\n","import React from \"react\";\nimport { LabelTypes_labelTypes_printers } from \"../queries/types/LabelTypes\";\n\nconst Printers: React.FC<{\n  printers: LabelTypes_labelTypes_printers[];\n  selectedPrinterName: string;\n  disabled: boolean;\n  onChange: (printerName: string) => void;\n}> = ({ printers, selectedPrinterName, disabled, onChange }) => {\n  const options = printers.map((printer, i) => {\n    return (\n      <option key={i} value={printer.hostname}>\n        {printer.hostname}\n      </option>\n    );\n  });\n\n  return (\n    <select\n      className=\"h-10 w-1/4 font-medium tracking-wider rounded shadow-md mr-2\"\n      value={selectedPrinterName}\n      disabled={disabled}\n      onChange={e => onChange(e.target.value)}\n    >\n      {options}\n    </select>\n  );\n};\n\nexport default Printers;\n","import React, { useEffect, useState } from \"react\";\nimport PrintButton from \"./PrintButton\";\nimport { CanvasField } from \"../types\";\nimport Printers from \"./Printers\";\nimport { LabelTypes_labelTypes } from \"../queries/types/LabelTypes\";\n\nconst ActionButtons: React.FC<{\n  labelType?: LabelTypes_labelTypes;\n  fields: CanvasField[];\n}> = ({ labelType, fields }) => {\n  const printers = labelType ? labelType.printers : [];\n  let selectedPrinter = \"\";\n  const [selectedPrinterName, setSelectedPrinterName] = useState<string>(\n    selectedPrinter\n  );\n\n  useEffect(() => {\n    if (labelType && labelType.printers.length > 0) {\n      setSelectedPrinterName(labelType.printers[0].hostname);\n    }\n  }, [labelType]);\n\n  return (\n    <div className=\"flex flex-row items-center justify-end border-b border-yellow\">\n      <div className=\"mr-4 rounded text-gray-800\">\n        <button className=\"h-10 px-2 py-1 border border-r-0 border-gray-900 bg-sanger-blue text-gray-100 cursor-pointer rounded-l btn-transition\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 512 512\"\n            className=\"w-6 h-4 fill-current\"\n          >\n            <path d=\"M287.52 224.48c-3.36-3.36-8-5.088-12.736-4.64l-124.448 11.296c-6.176.576-11.52 4.672-13.6 10.496-2.112 5.856-.672 12.384 3.712 16.768l33.952 33.952L4.704 462.048c-6.24 6.24-6.24 16.384 0 22.624l22.624 22.624c6.24 6.272 16.352 6.272 22.624 0L219.648 337.6l33.952 33.952c4.384 4.384 10.912 5.824 16.768 3.744a16.265 16.265 0 0 0 5.856-3.744c2.592-2.592 4.288-6.048 4.608-9.888l11.328-124.448c.448-4.736-1.28-9.376-4.64-12.736z\" />\n            <path d=\"M480 0H32C14.336 0 0 14.336 0 32v320h64V64h384v384H160v64h320c17.696 0 32-14.304 32-32V32c0-17.664-14.304-32-32-32z\" />\n          </svg>\n        </button>\n\n        <button className=\"h-10 px-2 py-1 border border-gray-900 bg-sanger-blue text-gray-100 cursor-pointer rounded-r btn-transition\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 512 512\"\n            className=\"w-6 h-4 fill-current\"\n          >\n            <path d=\"M507.296 4.704a16.06 16.06 0 0 0-12.768-4.64L370.08 11.392c-6.176.576-11.488 4.672-13.6 10.496s-.672 12.384 3.712 16.768l33.952 33.952-169.696 169.664c-6.24 6.24-6.24 16.384 0 22.624l22.624 22.624c6.272 6.272 16.384 6.272 22.656.032l169.696-169.696 33.952 33.952c4.384 4.384 10.912 5.824 16.768 3.744a16.265 16.265 0 0 0 5.856-3.744c2.592-2.592 4.288-6.048 4.608-9.888l11.328-124.448a16.06 16.06 0 0 0-4.64-12.768z\" />\n            <path d=\"M448 192v256H64V64h256V0H32C14.304 0 0 14.304 0 32v448c0 17.664 14.304 32 32 32h448c17.664 0 32-14.336 32-32V192h-64z\" />\n          </svg>\n        </button>\n      </div>\n\n      <Printers\n        disabled={!labelType}\n        printers={printers}\n        selectedPrinterName={selectedPrinterName}\n        onChange={(printerName: string) => setSelectedPrinterName(printerName)}\n      />\n\n      <PrintButton\n        disabled={printers.length === 0}\n        selectedPrinterName={selectedPrinterName}\n        canvasFields={fields}\n      />\n    </div>\n  );\n};\n\nexport default ActionButtons;\n","import toCanvas from 'bwip-js/browser-bwipjs';\nimport { memoize } from 'lodash';\n\nimport IBarcodeGenerator from \"./IBarcodeGenerator\";\nimport {BarcodeField, BarcodeType} from \"../../types/graphql-global-types\";\nimport {CanvasBarcodeField} from \"../../types\";\nimport {is2D} from \"../barcodes\";\n\nenum BwipBarcodeTypes {\n  code128 = \"code128\",\n  code39 = \"code39\",\n  datamatrix = \"datamatrix\",\n  ean13 = \"ean13\"\n}\n\n// bwip-js normalizes the BWIPP width and height options to always be in millimeters.\n// The resulting images are rendered at 72 dpi.\n// To convert to pixels, use a factor of 2.835 px/mm (72 dpi / 25.4 mm/in).\nconst SCALING_FACTOR = 2.835;\n\nconst bwipBarcodeGenerator: IBarcodeGenerator = (canvasBarcodeField: CanvasBarcodeField) => {\n  return new Promise<string>((resolve, reject) => {\n    // Create a tmp canvas to draw the barcode and then convert that to an image...\n    const detachedCanvas = document.createElement(\"canvas\");\n\n    let options: BwipJs.ToCanvasOptions = {\n      bcid: getBarcodeType(canvasBarcodeField),   // Barcode type\n      text: canvasBarcodeField.canvasValue,         // Text to encode\n      scaleX: (canvasBarcodeField.cellWidth) * 10, // X scaling factor\n      scaleY: 1\n    };\n\n    if (is2D(canvasBarcodeField.barcodeType)) {\n      options.scaleY = options.scaleX;\n    } else if (canvasBarcodeField.drawnHeight) {\n      options.height = canvasBarcodeField.drawnHeight / SCALING_FACTOR;\n    }\n\n    toCanvas(detachedCanvas, options, function (err, cvs) {\n      if (err) {\n        reject(err);\n      } else if (cvs) {\n        resolve(cvs.toDataURL('image/png'));\n      }\n    });\n  });\n};\n\nconst getBarcodeType = (barcodeField: BarcodeField): BwipBarcodeTypes => {\n  switch(barcodeField.barcodeType) {\n    case BarcodeType.code128: return BwipBarcodeTypes.code128;\n    case BarcodeType.code39: return BwipBarcodeTypes.code39;\n    case BarcodeType.datamatrix: return BwipBarcodeTypes.datamatrix;\n    case BarcodeType.ean13: return BwipBarcodeTypes.ean13;\n    default: throw Error(`No support for ${barcodeField.barcodeType} barcodes`);\n  }\n};\n\n\nexport default memoize(bwipBarcodeGenerator);","import JsBarcode from \"jsbarcode\";\nimport { memoize } from \"lodash\";\n\nimport IBarcodeGenerator from \"./IBarcodeGenerator\";\nimport {CanvasBarcodeField} from \"../../types\";\nimport {BarcodeType} from \"../../types/graphql-global-types\";\n\nfunction getFormatByBarcodeType(barcodeType: BarcodeType) {\n  switch (barcodeType) {\n    case BarcodeType.code128: return \"CODE128\";\n    case BarcodeType.code39: return \"CODE39\";\n    case BarcodeType.ean13: return \"EAN13\";\n    case BarcodeType.datamatrix:\n      throw new Error(\"JsBarcode does not support datamatrix\");\n  }\n}\n\nconst jsBarcodeBarcodeGenerator: IBarcodeGenerator = (canvasBarcodeField: CanvasBarcodeField) => {\n  return new Promise<string>((resolve, reject) => {\n    const detachedCanvas = document.createElement(\"canvas\");\n\n    JsBarcode(detachedCanvas, canvasBarcodeField.value, {\n      format: getFormatByBarcodeType(canvasBarcodeField.barcodeType),\n      width: canvasBarcodeField.drawnCellWidth,\n      height: canvasBarcodeField.drawnHeight,\n      displayValue: true,\n      textMargin: 0,\n      fontSize: 10,\n      margin: 1\n    });\n\n    resolve(detachedCanvas.toDataURL(\"image/png\"));\n  });\n};\n\nexport default memoize(jsBarcodeBarcodeGenerator);","import { BarcodeType } from \"../types/graphql-global-types\";\nimport IBarcodeGenerator from \"./barcodeGenerators/IBarcodeGenerator\";\nimport bwipBarcodeGenerator from \"./barcodeGenerators/BwipBarcodeGenerator\";\nimport jsBarcodeBarcodeGenerator from \"./barcodeGenerators/JsBarcodeBarcodeGenerator\";\n\nexport const is2D = (barcodeType: BarcodeType): boolean => {\n  switch (barcodeType) {\n    case BarcodeType.code128:\n    case BarcodeType.code39:\n    case BarcodeType.ean13:\n      return false;\n    case BarcodeType.datamatrix:\n      return true;\n  }\n};\n\nexport const getBarcodeGeneratorByBarcodeType = (\n  barcodeType: BarcodeType\n): IBarcodeGenerator => {\n  if (is2D(barcodeType)) {\n    return bwipBarcodeGenerator;\n  } else {\n    return jsBarcodeBarcodeGenerator;\n  }\n};\n","import React, { Dispatch, useEffect, useRef } from \"react\";\nimport { throttle } from \"lodash\";\n\nimport { IState } from \"../hooks/layoutReducer\";\nimport { Action } from \"../hooks/layoutReducer/actions\";\nimport { CanvasField, CanvasPosition, isCanvasTextField } from \"../types\";\nimport { getBarcodeGeneratorByBarcodeType } from \"../models/barcodes\";\n\nconst LabelDesigner: React.FC<{\n  state: IState;\n  dispatch: Dispatch<Action>;\n}> = ({ state, dispatch }) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const parentRef = useRef<HTMLDivElement>(null);\n\n  // Set the context\n  useEffect(() => {\n    if (canvasRef && canvasRef.current) {\n      const ctx = canvasRef.current.getContext(\"2d\");\n      if (ctx != null) {\n        dispatch({ type: \"SET_RENDERING_CONTEXT\", value: ctx });\n      }\n    }\n  }, [dispatch]);\n\n  // Update the canvas size\n  useEffect(() => {\n    if (state.ctx && parentRef && parentRef.current) {\n      const computedStyle = getComputedStyle(parentRef.current);\n\n      if (computedStyle && computedStyle.width) {\n        const width =\n          state.canvasToParentScale *\n          parseInt(computedStyle.getPropertyValue(\"width\").slice(0, -2));\n        const height = state.labelType\n          ? (state.labelType.height / state.labelType.width) * width\n          : width * 0.5;\n        dispatch({ type: \"SET_CANVAS_DIMENSIONS\", value: { width, height } });\n      }\n    }\n  }, [\n    state.ctx,\n    parentRef,\n    state.labelType,\n    state.canvasToParentScale,\n    dispatch\n  ]);\n\n  // Set the canvas event listeners\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const ctx = canvasRef.current.getContext(\"2d\");\n    if (ctx == null) return;\n\n    ctx.canvas.addEventListener(\"selectstart\", e => {\n      e.preventDefault();\n      return false;\n    });\n\n    ctx.canvas.addEventListener(\"mousedown\", e => {\n      dispatch({ type: \"MOUSE_DOWN\", value: getMousePosition(ctx, e) });\n    });\n\n    ctx.canvas.addEventListener(\"dblclick\", e => {\n      dispatch({ type: \"DOUBLE_CLICK\", value: getMousePosition(ctx, e) });\n    });\n\n    ctx.canvas.addEventListener(\n      \"mousemove\",\n      throttle(\n        e => {\n          dispatch({\n            type: \"SET_CANVAS_MOUSE_POSITION\",\n            value: getMousePosition(ctx, e)\n          });\n        },\n        50,\n        { leading: true }\n      )\n    );\n\n    ctx.canvas.addEventListener(\"mouseup\", e => {\n      dispatch({ type: \"MOUSE_UP\" });\n    });\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const ctx = canvasRef.current.getContext(\"2d\");\n    if (ctx == null) return;\n\n    // Make sure all the generated barcodes are loaded first\n    Promise.all(\n      state.canvasFields.map(field => {\n        // Immediately resolve if this is a CanvasTextField\n        if (isCanvasTextField(field)) {\n          return Promise.resolve(field);\n        } else {\n          // Otherwise create a new Promise\n          return new Promise<CanvasField>((resolve, reject) => {\n            const img = new Image();\n\n            img.onload = () => {\n              field.img = img;\n\n              dispatch({\n                type: \"UPDATE_BARCODE_FIELD_DRAWN_DIMENSIONS\",\n                canvasField: field,\n                value: { width: img.width, height: img.height }\n              });\n\n              // Resolve the promise once the browser has loaded the image\n              resolve(field);\n            };\n\n            getBarcodeGeneratorByBarcodeType(field.barcodeType)(field).then(\n              (barcode: string) => {\n                img.src = barcode;\n              }\n            );\n          });\n        }\n\n        // ...clear the canvas\n      })\n    )\n      .then(fields => {\n        ctx.clearRect(\n          0,\n          0,\n          state.canvasDimensions.width,\n          state.canvasDimensions.height\n        );\n        ctx.fillStyle = \"#fff\";\n        ctx.fillRect(\n          0,\n          0,\n          state.canvasDimensions.width,\n          state.canvasDimensions.height\n        );\n        return fields;\n\n        // ...render the text fields\n      })\n      .then(fields => {\n        fields.filter(isCanvasTextField).forEach(field => {\n          if (!!field.canvasRotation) {\n            // Save the canvas context\n            ctx.save();\n            // Translate the context origin to the text field origin...\n            ctx.translate(field.canvasX, field.canvasY);\n            // ...and rotate around it\n            ctx.rotate(field.canvasRotation);\n          }\n\n          // Set some font styles\n          ctx.textAlign = \"start\";\n          ctx.fillStyle = \"#000\";\n          ctx.textBaseline = \"bottom\";\n          ctx.font = `${field.drawnHeight}px ${field.canvasFont}`;\n\n          if (field.canvasRotation) {\n            // Fill text on the rotated canvas\n            ctx.fillText(field.value, 0, 0);\n            // Then restore it the way it was at save above\n            ctx.restore();\n          } else {\n            ctx.fillText(field.value, field.canvasX, field.canvasY);\n          }\n        });\n\n        return fields;\n      })\n\n      // ...finally render the barcode fields\n      .then(fields => {\n        fields.forEach((field: CanvasField) => {\n          if (!isCanvasTextField(field)) {\n            if (!field.img) return;\n\n            if (!!field.canvasRotation) {\n              ctx.save();\n              ctx.translate(field.canvasX, field.canvasY);\n              ctx.rotate(field.canvasRotation);\n            }\n\n            if (field.canvasRotation) {\n              ctx.drawImage(field.img, 0, 0);\n              ctx.restore();\n            } else {\n              ctx.drawImage(field.img, field.canvasX, field.canvasY);\n            }\n\n            dispatch({\n              type: \"UPDATE_BARCODE_FIELD_DRAWN_DIMENSIONS\",\n              canvasField: field,\n              value: { width: field.img.width, height: field.img.height }\n            });\n          }\n        });\n      });\n  }, [state.canvasFields, state.canvasDimensions, dispatch]);\n\n  return (\n    <div ref={parentRef} className=\"center-col flex flex-col items-center\">\n      <div className=\"flex-grow flex flex-col justify-around\">\n        <canvas\n          className=\"bg-white border border-black rounded-lg\"\n          width={state.canvasDimensions.width}\n          height={state.canvasDimensions.height}\n          ref={canvasRef}\n        />\n      </div>\n\n      <div className=\"h-12\">\n        <input\n          type=\"range\"\n          value={state.canvasToParentScale}\n          min=\"0.3\"\n          max=\"1\"\n          step=\"0.010\"\n          onChange={throttle(e => {\n            dispatch({\n              type: \"SET_CANVAS_TO_PARENT_SCALE\",\n              value: parseFloat(e.target.value)\n            });\n          }, 50)}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst getMousePosition = (\n  ctx: CanvasRenderingContext2D,\n  e: MouseEvent\n): CanvasPosition => {\n  const rect = ctx.canvas.getBoundingClientRect();\n  return {\n    x: ((e.clientX - rect.left) / (rect.right - rect.left)) * ctx.canvas.width,\n    y: ((e.clientY - rect.top) / (rect.bottom - rect.top)) * ctx.canvas.height\n  };\n};\n\nexport default LabelDesigner;\n","import React, { ChangeEvent } from \"react\";\nimport { CanvasTextField } from \"../types\";\nimport { Printers_printers_labelType } from \"../queries/types/Printers\";\n\nconst TextLabelInput: React.FC<{\n  canvasTextField: CanvasTextField;\n  onInputChange: (\n    prop: string\n  ) => (\n    e: ChangeEvent<HTMLInputElement> | ChangeEvent<HTMLSelectElement>\n  ) => void;\n  labelType: Printers_printers_labelType;\n}> = ({ canvasTextField, onInputChange, labelType }) => {\n  return (\n    <div className=\"label-input-grid mt-3\">\n      <label htmlFor=\"fontSize\">Size:</label>\n      <input\n        id=\"fontSize\"\n        type=\"range\"\n        min=\"0.1\"\n        max={labelType.height}\n        step=\"0.1\"\n        onChange={onInputChange(\"fontSize\")}\n        value={canvasTextField.fontSize}\n      />\n      <span>{canvasTextField.fontSize}</span>\n\n      <label htmlFor=\"textX\">X:</label>\n      <input\n        id=\"textX\"\n        type=\"range\"\n        min=\"0\"\n        max={labelType.width}\n        step=\"1\"\n        onChange={onInputChange(\"x\")}\n        value={canvasTextField.x}\n      />\n      <span>{canvasTextField.x}</span>\n\n      <label htmlFor=\"textY\">Y:</label>\n      <input\n        id=\"textY\"\n        type=\"range\"\n        min=\"0\"\n        max={labelType.height}\n        step=\"1\"\n        onChange={onInputChange(\"y\")}\n        value={canvasTextField.y}\n      />\n      <span>{canvasTextField.y}</span>\n    </div>\n  );\n};\n\nexport default TextLabelInput;\n","import React, { ChangeEvent } from \"react\";\nimport { CanvasBarcodeField } from \"../types\";\nimport { Printers_printers_labelType } from \"../queries/types/Printers\";\n\nconst BarcodeLabelInput: React.FC<{\n  canvasBarcodeField: CanvasBarcodeField;\n  onInputChange: (\n    prop: string\n  ) => (\n    e: ChangeEvent<HTMLInputElement> | ChangeEvent<HTMLSelectElement>\n  ) => void;\n  labelType: Printers_printers_labelType;\n}> = ({ canvasBarcodeField, onInputChange, labelType }) => {\n\n  return (\n    <div className=\"label-input-grid mt-3\">\n      <label htmlFor=\"cellWidth\">Width:</label>\n      <input\n        id=\"cellWidth\"\n        type=\"range\"\n        min=\"0.1\"\n        max=\"0.9\"\n        step=\"0.1\"\n        onChange={onInputChange(\"cellWidth\")}\n        value={canvasBarcodeField.cellWidth}\n      />\n      <span>{canvasBarcodeField.cellWidth}</span>\n\n      <label htmlFor=\"x\">X:</label>\n      <input\n        id=\"x\"\n        type=\"range\"\n        min=\"0\"\n        max={labelType.width}\n        step=\"1\"\n        onChange={onInputChange(\"x\")}\n        value={canvasBarcodeField.x}\n      />\n      <span>{canvasBarcodeField.x}</span>\n\n      <label htmlFor=\"y\">Y:</label>\n      <input\n        id=\"y\"\n        type=\"range\"\n        min=\"0\"\n        max={labelType.height}\n        step=\"1\"\n        onChange={onInputChange(\"y\")}\n        value={canvasBarcodeField.y}\n      />\n      <span>{canvasBarcodeField.y}</span>\n\n      <label htmlFor=\"height\">Height:</label>\n      <input\n        id=\"height\"\n        type=\"range\"\n        min=\"1\"\n        max={labelType.height}\n        step=\"1\"\n        onChange={onInputChange(\"height\")}\n        value={canvasBarcodeField.height || \"\"}\n      />\n      <span>{canvasBarcodeField.height}</span>\n    </div>\n  );\n};\n\nexport default BarcodeLabelInput;\n","import React, {\n  ChangeEvent,\n  CSSProperties,\n  Dispatch,\n  useEffect,\n  useRef\n} from \"react\";\nimport {\n  CanvasBarcodeField,\n  CanvasField,\n  CanvasFont,\n  CanvasTextField,\n  isCanvasTextField\n} from \"../types\";\nimport { Printers_printers_labelType } from \"../queries/types/Printers\";\nimport { Action } from \"../hooks/layoutReducer/actions\";\nimport TextLabelInput from \"./TextLabelInput\";\nimport BarcodeLabelInput from \"./BarcodeLabelInput\";\nimport { BarcodeType, Font } from \"../types/graphql-global-types\";\n\nconst LabelInput: React.FC<{\n  canvasField: CanvasField;\n  selectedCanvasField?: CanvasField;\n  superSelectedCanvasField?: CanvasField;\n  labelType: Printers_printers_labelType;\n  dispatch: Dispatch<Action>;\n}> = ({\n  canvasField,\n  superSelectedCanvasField,\n  selectedCanvasField,\n  labelType,\n  dispatch\n}) => {\n  const divRef = useRef<HTMLDivElement>(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (selectedCanvasField === canvasField) {\n      scrollIntoView();\n    }\n  }, [selectedCanvasField, canvasField]);\n\n  useEffect(() => {\n    if (superSelectedCanvasField === canvasField) {\n      highlightInputText();\n    }\n  }, [superSelectedCanvasField, canvasField]);\n\n  const highlightInputText = () => {\n    inputRef.current?.select();\n  };\n\n  const scrollIntoView = () => {\n    divRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  const onInputChange = (prop: string) => {\n    return (\n      e: ChangeEvent<HTMLSelectElement> | ChangeEvent<HTMLInputElement>\n    ) => {\n      dispatch({\n        type: \"UPDATE_CANVAS_FIELD\",\n        canvasField: canvasField,\n        updates: { [prop]: e.currentTarget.value }\n      });\n    };\n  };\n\n  const removeField = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n    e.preventDefault();\n    dispatch({ type: \"REMOVE_CANVAS_FIELD\", canvasField: canvasField });\n  };\n\n  let ChildLabelInput;\n\n  if (isCanvasTextField(canvasField)) {\n    ChildLabelInput = (\n      <TextLabelInput\n        canvasTextField={canvasField}\n        labelType={labelType}\n        onInputChange={onInputChange}\n      />\n    );\n  } else {\n    ChildLabelInput = (\n      <BarcodeLabelInput\n        canvasBarcodeField={canvasField}\n        labelType={labelType}\n        onInputChange={onInputChange}\n      />\n    );\n  }\n\n  const current: string = selectedCanvasField === canvasField ? \" current\" : \"\";\n  const style: CSSProperties = isCanvasTextField(canvasField)\n    ? { fontFamily: `${canvasField.canvasFont}` }\n    : {};\n\n  return (\n    <div\n      ref={divRef}\n      style={{ opacity: 0.9 }}\n      className={`col${current} bg-white rounded-lg shadow-md mb-4 p-3 mt-4`}\n    >\n      <div className=\"flex flex-row justify-between align-top\">\n        <input\n          className=\"p-1 cursor-pointer border-b\"\n          ref={inputRef}\n          type=\"text\"\n          style={style}\n          onClick={highlightInputText}\n          onChange={onInputChange(\"value\")}\n          value={canvasField.value}\n        />\n\n        <a\n          className=\"block text-4xl leading-none pl-3 text-red -mt-1 hover:text-red-700\"\n          onClick={removeField}\n          href=\"#remove\"\n        >\n          &times;\n        </a>\n      </div>\n\n      <div className=\"flex flex-row justify-between mt-3\">\n        {isCanvasTextField(canvasField) ? (\n          <FontFamilySelector\n            canvasTextField={canvasField}\n            onSelect={(font: Font) => {\n              dispatch({\n                type: \"UPDATE_CANVAS_FIELD\",\n                canvasField,\n                updates: { font }\n              });\n            }}\n          />\n        ) : (\n          <BarcodeTypeSelector\n            canvasBarcodeField={canvasField}\n            onSelect={(barcodeType: BarcodeType) => {\n              dispatch({\n                type: \"UPDATE_CANVAS_FIELD\",\n                canvasField,\n                updates: { barcodeType }\n              });\n            }}\n          />\n        )}\n\n        <div className=\"flex flex-row\">\n          <div\n            onClick={() => {\n              dispatch({ type: \"ROTATE_ANTI_CLOCKWISE\", canvasField });\n            }}\n            className=\"px-2 py-1 border border-r-0 text-gray-900 cursor-pointer rounded-l hover:bg-gray-100\"\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"rotate-ac w-5 h-5 fill-current\"\n              viewBox=\"0 0 16 16\"\n            >\n              <path d=\"M8 0C5 0 2.4 1.6 1.1 4.1L0 3v4h4L2.5 5.5C3.5 3.5 5.6 2 8 2c3.3 0 6 2.7 6 6s-2.7 6-6 6c-1.8 0-3.4-.8-4.5-2.1L2 13.2C3.4 14.9 5.6 16 8 16c4.4 0 8-3.6 8-8s-3.6-8-8-8z\" />\n            </svg>\n          </div>\n\n          <div\n            onClick={() => {\n              dispatch({ type: \"ROTATE_CLOCKWISE\", canvasField });\n            }}\n            className=\"px-2 py-1 border text-gray-900 cursor-pointer rounded-r hover:bg-gray-100\"\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"rotate-c w-5 h-5 fill-current\"\n              viewBox=\"0 0 16 16\"\n            >\n              <path d=\"M16 7V3l-1.1 1.1C13.6 1.6 11 0 8 0 3.6 0 0 3.6 0 8s3.6 8 8 8c2.4 0 4.6-1.1 6-2.8l-1.5-1.3C11.4 13.2 9.8 14 8 14c-3.3 0-6-2.7-6-6s2.7-6 6-6c2.4 0 4.5 1.5 5.5 3.5L12 7h4z\" />\n            </svg>\n          </div>\n        </div>\n      </div>\n\n      {ChildLabelInput}\n    </div>\n  );\n};\n\nconst FontFamilySelector: React.FC<{\n  canvasTextField: CanvasTextField;\n  onSelect: (font: Font) => void;\n}> = ({ canvasTextField, onSelect }) => {\n  return (\n    <div className=\"flex flex-row\">\n      <button\n        onClick={() => {\n          onSelect(Font.proportional);\n        }}\n        disabled={canvasTextField.canvasFont === CanvasFont.proportional}\n        title={Font.proportional}\n        value={Font.proportional}\n        className=\"px-2 py-1 text-gray-900 border border-r-0 cursor-pointer rounded-l text-sm font-serif hover:bg-gray-100 disabled:bg-gray-400 disabled:cursor-default disabled:opacity-50\"\n      >\n        Proportional\n      </button>\n\n      <button\n        onClick={() => {\n          onSelect(Font.mono);\n        }}\n        disabled={canvasTextField.canvasFont === CanvasFont.mono}\n        title={Font.mono}\n        value={Font.mono}\n        className=\"px-2 py-1 text-gray-900 border cursor-pointer rounded-r text-sm font-mono hover:bg-gray-100 disabled:bg-gray-400 disabled:cursor-default disabled:opacity-50\"\n      >\n        Mono\n      </button>\n    </div>\n  );\n};\n\nconst BarcodeTypeSelector: React.FC<{\n  canvasBarcodeField: CanvasBarcodeField;\n  onSelect: (barcodeType: BarcodeType) => void;\n}> = ({ canvasBarcodeField, onSelect }) => {\n  return (\n    <div className=\"flex flex-row\">\n      <button\n        onClick={() => {\n          onSelect(BarcodeType.code128);\n        }}\n        disabled={canvasBarcodeField.barcodeType === BarcodeType.code128}\n        title={BarcodeType.code128}\n        value={BarcodeType.code128}\n        className=\"px-2 py-1 text-gray-900 border border-r-0 cursor-pointer rounded-l text-sm font-serif hover:bg-gray-100 disabled:bg-gray-400 disabled:cursor-default disabled:opacity-50\"\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"h-5 w-5 fill-current\"\n          viewBox=\"0 0 480 480\"\n        >\n          <path d=\"M80 48H16C7.168 48 0 55.168 0 64v64c0 8.832 7.168 16 16 16s16-7.168 16-16V80h48c8.832 0 16-7.168 16-16s-7.168-16-16-16zM464 336c-8.832 0-16 7.168-16 16v48h-48c-8.832 0-16 7.168-16 16s7.168 16 16 16h64c8.832 0 16-7.168 16-16v-64c0-8.832-7.168-16-16-16zM464 48h-64c-8.832 0-16 7.168-16 16s7.168 16 16 16h48v48c0 8.832 7.168 16 16 16s16-7.168 16-16V64c0-8.832-7.168-16-16-16zM80 400H32v-48c0-8.832-7.168-16-16-16s-16 7.168-16 16v64c0 8.832 7.168 16 16 16h64c8.832 0 16-7.168 16-16s-7.168-16-16-16zM64 112h32v256H64zM128 112h32v192h-32zM192 112h32v192h-32zM256 112h32v256h-32zM320 112h32v192h-32zM384 112h32v256h-32zM128 336h32v32h-32zM192 336h32v32h-32zM320 336h32v32h-32z\" />\n        </svg>\n      </button>\n\n      <button\n        onClick={() => {\n          onSelect(BarcodeType.code39);\n        }}\n        disabled={canvasBarcodeField.barcodeType === BarcodeType.code39}\n        title={BarcodeType.code39}\n        value={BarcodeType.code39}\n        className=\"px-2 py-1 text-gray-900 border border-r-0 cursor-pointer text-sm font-serif hover:bg-gray-100 disabled:bg-gray-400 disabled:cursor-default disabled:opacity-50\"\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"h-5 w-5 fill-current\"\n          viewBox=\"0 0 480 480\"\n        >\n          <path d=\"M0 44h16v352H0zM48 44H32v352h32V44zM192 44h-16v352h32V44zM328 44h-16v352h32V44zM376 44h-16v352h32V44zM80 44h16v352H80zM224 44h16v352h-16zM248 44h16v352h-16zM280 44h16v352h-16zM144 44h-32v352h48V44zM440 44h-32v352h48V44zM464 44h16v352h-16zM0 420h16v16H0zM32 420h32v16H32zM80 420h16v16H80zM112 420h48v16h-48zM176 420h32v16h-32zM224 420h16v16h-16zM248 420h48v16h-48zM312 420h32v16h-32zM360 420h32v16h-32zM408 420h72v16h-72z\" />\n        </svg>\n      </button>\n\n      <button\n        onClick={() => {\n          onSelect(BarcodeType.ean13);\n        }}\n        disabled={canvasBarcodeField.barcodeType === BarcodeType.ean13}\n        title={BarcodeType.ean13}\n        value={BarcodeType.ean13}\n        className=\"px-2 py-1 text-gray-900 border border-r-0 cursor-pointer text-sm font-serif hover:bg-gray-100 disabled:bg-gray-400 disabled:cursor-default disabled:opacity-50\"\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"h-5 w-5 fill-current\"\n          viewBox=\"0 0 512 512\"\n        >\n          <path d=\"M395.13 72.348c-9.217 0-16.696 7.473-16.696 16.696v333.913c0 9.223 7.479 16.696 16.696 16.696s16.696-7.473 16.696-16.696V89.044c0-9.223-7.478-16.696-16.696-16.696zM205.913 72.348c-9.217 0-16.696 7.473-16.696 16.696v333.913c0 9.223 7.479 16.696 16.696 16.696 9.217 0 16.696-7.473 16.696-16.696V89.044c0-9.223-7.479-16.696-16.696-16.696zM128 72.348c-9.217 0-16.696 7.473-16.696 16.696v333.913c0 9.223 7.479 16.696 16.696 16.696s16.696-7.473 16.696-16.696V89.044c0-9.223-7.479-16.696-16.696-16.696zM33.391 72.348C14.949 72.348 0 87.297 0 105.739v300.522c0 18.442 14.949 33.391 33.391 33.391s33.391-14.949 33.391-33.391V105.739c.001-18.442-14.949-33.391-33.391-33.391zM300.522 72.348c-18.442 0-33.391 14.949-33.391 33.391v300.522c0 18.442 14.949 33.391 33.391 33.391s33.391-14.949 33.391-33.391V105.739c0-18.442-14.949-33.391-33.391-33.391z\" />\n          <path d=\"M300.522 72.348c-18.442 0-33.391 14.949-33.391 33.391v300.522c0 18.442 14.949 33.391 33.391 33.391s33.391-14.949 33.391-33.391V105.739c0-18.442-14.949-33.391-33.391-33.391zM478.609 72.348c-18.442 0-33.391 14.949-33.391 33.391v300.522c0 18.442 14.949 33.391 33.391 33.391S512 424.703 512 406.261V105.739c0-18.442-14.949-33.391-33.391-33.391z\" />\n        </svg>\n      </button>\n\n      <button\n        onClick={() => {\n          onSelect(BarcodeType.datamatrix);\n        }}\n        disabled={canvasBarcodeField.barcodeType === BarcodeType.datamatrix}\n        title={BarcodeType.datamatrix}\n        value={BarcodeType.datamatrix}\n        className=\"px-2 py-1 text-gray-900 border cursor-pointer rounded-r text-sm font-mono hover:bg-gray-100 disabled:bg-gray-400 disabled:cursor-default disabled:opacity-50\"\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"h-5 w-5 fill-current\"\n          viewBox=\"0 0 512 512\"\n        >\n          <path d=\"M160 0H0v160h160V0zm-32 128H32V32h96v96z\" />\n          <path d=\"M64 64h32v32H64zM352 0v160h160V0H352zm128 128h-96V32h96v96z\" />\n          <path d=\"M416 64h32v32h-32zM0 512h160V352H0v160zm32-128h96v96H32v-96z\" />\n          <path d=\"M64 416h32v32H64zM256 0h64v32h-64zM256 128h32V96h32V64h-96V32h-32v64h64zM192 128h32v32h-32zM320 160h-32v32h-96v32h128zM32 288h32v-32H32v-64H0v128h32zM64 192h32v32H64z\" />\n          <path d=\"M192 320h64v-32h-32v-32h-64v-64h-32v64H96v64h32v-32h64zM288 256h32v64h-32zM288 352h-96v32h64v96h-64v32h96v-32h64v-32h-64z\" />\n          <path d=\"M192 416h32v32h-32zM320 352h32v64h-32zM480 416h-96v96h32v-64h64z\" />\n          <path d=\"M448 480h64v32h-64zM480 352h32v32h-32zM384 384h32v-96h-64v32h32zM448 224h-32v-32h-32v32h-32v32h128v-32h32v-32h-64zM448 288h64v32h-64z\" />\n        </svg>\n      </button>\n    </div>\n  );\n};\n\nexport default LabelInput;\n","import React, { Dispatch } from \"react\";\n\nimport { Printers_printers_labelType } from \"../queries/types/Printers\";\nimport { CanvasField } from \"../types\";\nimport { Action } from \"../hooks/layoutReducer/actions\";\nimport LabelInput from \"./LabelInput\";\n\nconst FieldList: React.FC<{\n  labelType?: Printers_printers_labelType;\n  layout: CanvasField[];\n  selectedCanvasField?: CanvasField;\n  superSelectedCanvasField?: CanvasField;\n  dispatch: Dispatch<Action>;\n}> = ({\n  labelType,\n  layout,\n  selectedCanvasField,\n  superSelectedCanvasField,\n  dispatch\n}) => {\n  let labels: JSX.Element[] = [];\n\n  // When the user hasn't selected a label type yet\n  if (!labelType) {\n    labels = [<Helper key={-1} message=\"Select a Label Type to start\" />];\n\n    // When the user has selected a label type, but not added any fields\n  } else if (labelType && layout.length === 0) {\n    labels = [\n      <Helper key={-2} message=\"Add some fields with the buttons below\" />\n    ];\n  } else if (labelType && layout.length > 0) {\n    labels = layout.map((canvasField: CanvasField, i: number) => {\n      return (\n        <LabelInput\n          canvasField={canvasField}\n          key={i}\n          labelType={labelType}\n          dispatch={dispatch}\n          selectedCanvasField={selectedCanvasField}\n          superSelectedCanvasField={superSelectedCanvasField}\n        />\n      );\n    });\n  }\n\n  return (\n    <div className=\"flex flex-col p-3 h-full\">\n      <div className=\"flex-grow relative h-full overflow-y-auto\">\n        <div className=\"max-h-full bottom-0 absolute w-full\">{labels}</div>\n      </div>\n\n      <div className=\"flex flex-row mt-2\">\n        <button\n          className=\"btn btn-transition flex-grow w-1/2 mr-3\"\n          disabled={!labelType}\n          onClick={() => dispatch({ type: \"ADD_CANVAS_TEXT_FIELD\" })}\n        >\n          <span className=\"text-xl\">{\"\\u002B\"}</span> Text\n        </button>\n        <button\n          className=\"btn btn-transition flex-grow w-1/2\"\n          disabled={!labelType}\n          onClick={() => dispatch({ type: \"ADD_CANVAS_BARCODE_FIELD\" })}\n        >\n          <span className=\"text-xl\">{\"\\u002B\"}</span> Barcode\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst Helper: React.FC<{ message: string }> = ({ message }) => {\n  return (\n    <div\n      style={{ opacity: 0.9 }}\n      className=\"bg-white rounded-lg shadow-md mb-4 p-3 mt-4 text-center\"\n    >\n      <h2>{message}</h2>\n    </div>\n  );\n};\n\nexport default FieldList;\n","import { Printers_printers_labelType } from \"../queries/types/Printers\";\nimport {\n  CanvasBarcodeField,\n  CanvasField,\n  CanvasFont,\n  CanvasTextField,\n  Field,\n  isTextField,\n  TwoDimensional\n} from \"../types\";\nimport {\n  BarcodeField,\n  BarcodeType,\n  Font,\n  Rotation,\n  TextField\n} from \"../types/graphql-global-types\";\nimport { is2D } from \"../models/barcodes\";\n\nexport const buildTextField = (\n  options: Partial<TextField> = {},\n  labelType?: Printers_printers_labelType\n): TextField => {\n  return Object.assign(\n    {},\n    {\n      x: 1,\n      y: labelType ? labelType.height - 1 : 1,\n      rotation: Rotation.north,\n      value: \"TextField\",\n      font: Font.proportional,\n      fontSize: labelType ? labelType.height / 4 : 1\n    },\n    options\n  );\n};\n\nexport const buildCanvasTextField = (\n  labelType: Printers_printers_labelType,\n  canvasDimensions: TwoDimensional,\n  ctx: CanvasRenderingContext2D,\n  options: Partial<TextField> = {}\n): CanvasTextField => {\n  const textField: TextField = buildTextField(options, labelType);\n\n  let xRatio = textField.x / labelType.width;\n  let yRatio = textField.y / labelType.height;\n\n  let fontSizeRatio = textField.fontSize / labelType.height;\n\n  const canvasTextField: CanvasTextField = {\n    x: textField.x,\n    y: textField.y,\n    value: textField.value,\n    drawnHeight: canvasDimensions.height * fontSizeRatio,\n    drawnWidth: 0,\n    canvasX: canvasDimensions.width * xRatio,\n    canvasY: canvasDimensions.height * yRatio,\n    canvasFont:\n      textField.font === Font.mono ? CanvasFont.mono : CanvasFont.proportional,\n    font: textField.font,\n    fontSize: textField.fontSize,\n    rotation: textField.rotation,\n    canvasRotation: canvasRotation(textField.rotation)\n  };\n\n  ctx.font = `${canvasTextField.drawnHeight}px ${canvasTextField.canvasFont}`;\n  const textMetrics: TextMetrics = ctx.measureText(textField.value);\n  canvasTextField.drawnWidth = textMetrics.width;\n\n  return canvasTextField;\n};\n\nexport const buildBarcodeField = (\n  options: Partial<CanvasBarcodeField> = {},\n  labelType?: Printers_printers_labelType\n): BarcodeField => {\n  return Object.assign(\n    {},\n    {\n      x: 1,\n      y: 1,\n      rotation: Rotation.north,\n      barcodeType: BarcodeType.code128,\n      cellWidth: 0.1,\n      value: \"XYZ123\",\n      height: labelType ? labelType.height / 4 : 1\n    },\n    options\n  );\n};\n\nexport const buildCanvasBarcodeField = (\n  labelType: Printers_printers_labelType,\n  canvasDimensions: TwoDimensional,\n  ctx: CanvasRenderingContext2D,\n  options: Partial<CanvasBarcodeField> = {}\n): CanvasBarcodeField => {\n  const barcodeField: BarcodeField = buildBarcodeField(options, labelType);\n\n  let xRatio = barcodeField.x / labelType.width;\n  let yRatio = barcodeField.y / labelType.height;\n  let cellWidthRatio = barcodeField.cellWidth / labelType.width;\n\n  let drawnHeight = 0;\n\n  if (!is2D(barcodeField.barcodeType) && barcodeField.height) {\n    drawnHeight =\n      (barcodeField.height / labelType.height) * canvasDimensions.height;\n  }\n\n  const canvasBarcodeField: CanvasBarcodeField = {\n    drawnHeight,\n    drawnWidth: 0, // Don't know what this is until it's actually drawn\n    drawnCellWidth: canvasDimensions.width * cellWidthRatio,\n    canvasX: canvasDimensions.width * xRatio,\n    canvasY: canvasDimensions.height * yRatio,\n    rotation: barcodeField.rotation,\n    canvasRotation: canvasRotation(barcodeField.rotation),\n    canvasValue: canvasValue(barcodeField),\n    x: barcodeField.x,\n    y: barcodeField.y,\n    barcodeType: barcodeField.barcodeType,\n    cellWidth: barcodeField.cellWidth,\n    value: barcodeField.value,\n    height: barcodeField.height\n  };\n\n  return canvasBarcodeField;\n};\n\nexport const buildCanvasField = (\n  labelType: Printers_printers_labelType,\n  canvasDimensions: TwoDimensional,\n  ctx: CanvasRenderingContext2D,\n  field: Field\n): CanvasField => {\n  if (isTextField(field)) {\n    return buildCanvasTextField(labelType, canvasDimensions, ctx, field);\n  } else {\n    return buildCanvasBarcodeField(labelType, canvasDimensions, ctx, field);\n  }\n};\n\nfunction canvasValue(barcodeField: BarcodeField): string {\n  if (\n    barcodeField.barcodeType === BarcodeType.ean13 &&\n    barcodeField.value.length < 13\n  ) {\n    return barcodeField.value.padStart(13, \"0\");\n  } else if (\n    barcodeField.barcodeType === BarcodeType.ean13 &&\n    barcodeField.value.length > 13\n  ) {\n    return barcodeField.value.substr(0, 13);\n  }\n  return barcodeField.value;\n}\n\nfunction canvasRotation(rotation: Rotation | null | undefined) {\n  if (!rotation) return 0;\n\n  switch (rotation) {\n    case Rotation.east:\n      return 90 * (Math.PI / 180);\n    case Rotation.north:\n      return 0;\n    case Rotation.south:\n      return 180 * (Math.PI / 180);\n    case Rotation.west:\n      return 270 * (Math.PI / 180);\n    default:\n      throw new Error(`Unrecognised rotation: ${rotation}`);\n  }\n}\n","import { Reducer, useEffect, useReducer } from \"react\";\n\nimport { Action, UpdateCanvasField } from \"./actions\";\nimport {\n  CanvasBarcodeField,\n  CanvasField,\n  CanvasPosition,\n  CanvasTextField,\n  isCanvasTextField,\n  TwoDimensional\n} from \"../../types\";\nimport { Printers_printers_labelType } from \"../../queries/types/Printers\";\nimport {\n  buildCanvasBarcodeField,\n  buildCanvasField,\n  buildCanvasTextField\n} from \"../../factories/CanvasFieldFactory\";\nimport { HookRouter, useQueryParams } from \"hookrouter\";\nimport { buildPrintRequest } from \"../../factories/PrintRequestFactory\";\nimport { PrintRequest, Rotation } from \"../../types/graphql-global-types\";\nimport { LabelTypes_labelTypes } from \"../../queries/types/LabelTypes\";\n\n// What the query params should look like in the URL\ninterface queryParams {\n  labelType?: string;\n  printRequest?: string;\n}\n\n// What the query params look like in state\ninterface initialQueryParams {\n  labelType?: string;\n  printRequest: PrintRequest;\n}\n\n// What the state of the app looks like\nexport interface IState {\n  initialQueryParams?: initialQueryParams;\n  labelTypes?: LabelTypes_labelTypes[];\n  labelType?: LabelTypes_labelTypes;\n  canvasFields: CanvasField[];\n  canvasToParentScale: number;\n  canvasMousePosition: CanvasPosition;\n  draggingOffset?: CanvasPosition;\n  isDragging: boolean;\n  selectedCanvasField?: CanvasField;\n  superSelectedCanvasField?: CanvasField;\n  canvasDimensions: TwoDimensional;\n  ctx?: CanvasRenderingContext2D;\n}\n\nconst initialState: IState = {\n  canvasFields: [],\n  canvasToParentScale: 0.6,\n  canvasMousePosition: { x: 0, y: 0 },\n  isDragging: false,\n  canvasDimensions: { width: 50, height: 50 } // Doesn't really matter, will change before user sees\n};\n\n// Init\nconst init = (queryParams: HookRouter.QueryParams): IState => {\n  if (queryParams.hasOwnProperty(\"printRequest\")) {\n    queryParams.printRequest = JSON.parse(queryParams.printRequest);\n  }\n  return Object.assign({}, initialState, { initialQueryParams: queryParams });\n};\n\n// Reducer\nconst reducer: Reducer<IState, Action> = (state, action): IState => {\n  let canvasField: CanvasField | undefined;\n  let canvasFields: CanvasField[] = [];\n  let options: Partial<IState> = {};\n\n  switch (action.type) {\n    case \"ROTATE_ANTI_CLOCKWISE\":\n      return {\n        ...state,\n        canvasFields: setCanvasFields(state, {\n          type: \"UPDATE_CANVAS_FIELD\",\n          canvasField: action.canvasField,\n          updates: { rotation: rotateAntiClockWise(action.canvasField) }\n        })\n      };\n\n    case \"ROTATE_CLOCKWISE\":\n      return {\n        ...state,\n        canvasFields: setCanvasFields(state, {\n          type: \"UPDATE_CANVAS_FIELD\",\n          canvasField: action.canvasField,\n          updates: { rotation: rotateClockWise(action.canvasField) }\n        })\n      };\n\n    case \"DELETE_SELECTED_CANVAS_FIELD\":\n      canvasFields = state.canvasFields;\n\n      if (state.selectedCanvasField) {\n        canvasFields = state.canvasFields.filter(\n          canvasField => canvasField !== state.selectedCanvasField\n        );\n      }\n\n      return { ...state, canvasFields };\n\n    case \"DOUBLE_CLICK\":\n      canvasField = hitCanvasField(action.value, state.canvasFields);\n\n      if (canvasField) {\n        options.superSelectedCanvasField = canvasField;\n        options.selectedCanvasField = canvasField;\n      }\n\n      return { ...state, ...options };\n    case \"SET_LABEL_TYPES\":\n      return { ...state, labelTypes: action.value };\n\n    case \"SET_SELECTED_CANVAS_FIELD\":\n      return { ...state, selectedCanvasField: action.value };\n\n    // TODO: Surely there's a way to update state without triggering a re-render?\n    // This is almost certainly not the right way\n    case \"UPDATE_BARCODE_FIELD_DRAWN_DIMENSIONS\":\n      state.canvasFields.forEach(canvasField => {\n        if (action.canvasField !== canvasField) {\n          return;\n        }\n\n        canvasField.drawnWidth = action.value.width;\n        canvasField.drawnHeight = action.value.height;\n      });\n\n      return state;\n\n    case \"MOUSE_DOWN\":\n      canvasField = hitCanvasField(action.value, state.canvasFields);\n\n      if (canvasField) {\n        options.isDragging = true;\n        options.draggingOffset = {\n          x: action.value.x - canvasField.canvasX,\n          y: action.value.y - canvasField.canvasY\n        };\n        options.selectedCanvasField = canvasField;\n      }\n\n      return { ...state, ...options };\n\n    case \"MOUSE_UP\":\n      return { ...state, isDragging: false };\n\n    case \"SET_CANVAS_MOUSE_POSITION\":\n      if (!state.isDragging || !state.selectedCanvasField) {\n        return { ...state };\n      }\n\n      options.canvasFields = state.canvasFields.map(canvasField => {\n        if (canvasField !== state.selectedCanvasField) {\n          return canvasField;\n        }\n\n        if (state.labelType && state.ctx && state.draggingOffset) {\n          const builderOptions = {\n            x: Math.round(\n              ((action.value.x - state.draggingOffset.x) /\n                state.canvasDimensions.width) *\n                state.labelType.width\n            ),\n            y: Math.round(\n              ((action.value.y - state.draggingOffset.y) /\n                state.canvasDimensions.height) *\n                state.labelType.height\n            )\n          };\n\n          options.selectedCanvasField = buildCanvasField(\n            state.labelType as Printers_printers_labelType,\n            state.canvasDimensions,\n            state.ctx as CanvasRenderingContext2D,\n            Object.assign({}, state.selectedCanvasField, builderOptions)\n          );\n\n          // TODO: Make this less side-effecty\n          return options.selectedCanvasField;\n        }\n\n        return canvasField;\n      });\n\n      return { ...state, ...options, canvasMousePosition: action.value };\n\n    case \"REMOVE_CANVAS_FIELD\":\n      return {\n        ...state,\n        canvasFields: state.canvasFields.filter(\n          canvasField => canvasField !== action.canvasField\n        )\n      };\n\n    case \"UPDATE_CANVAS_FIELD\":\n      return {\n        ...state,\n        canvasFields: setCanvasFields(state, action)\n      };\n\n    case \"SET_RENDERING_CONTEXT\":\n      return { ...state, ctx: action.value };\n\n    case \"ADD_CANVAS_TEXT_FIELD\":\n      canvasFields = [...state.canvasFields];\n      let newCanvasTextField: CanvasTextField | undefined;\n\n      if (state.labelType && state.ctx) {\n        newCanvasTextField = buildCanvasTextField(\n          state.labelType,\n          state.canvasDimensions,\n          state.ctx,\n          action.options || {}\n        );\n        canvasFields.push(newCanvasTextField);\n      }\n\n      return {\n        ...state,\n        canvasFields,\n        selectedCanvasField: newCanvasTextField\n      };\n\n    case \"ADD_CANVAS_BARCODE_FIELD\":\n      canvasFields = [...state.canvasFields];\n      let newCanvasBarcodeField: CanvasBarcodeField | undefined;\n\n      if (state.labelType && state.ctx) {\n        newCanvasBarcodeField = buildCanvasBarcodeField(\n          state.labelType,\n          state.canvasDimensions,\n          state.ctx,\n          action.options || {}\n        );\n        canvasFields.push(newCanvasBarcodeField);\n      }\n\n      return {\n        ...state,\n        canvasFields,\n        selectedCanvasField: newCanvasBarcodeField\n      };\n\n    case \"SET_CANVAS_DIMENSIONS\":\n      canvasFields = state.canvasFields;\n\n      if (state.labelType && state.ctx) {\n        canvasFields = state.canvasFields.map(canvasField => {\n          return buildCanvasField(\n            state.labelType as Printers_printers_labelType,\n            action.value,\n            state.ctx as CanvasRenderingContext2D,\n            canvasField\n          );\n        });\n      }\n      return { ...state, canvasDimensions: action.value, canvasFields };\n    case \"SET_CANVAS_TO_PARENT_SCALE\":\n      return { ...state, canvasToParentScale: action.value };\n\n    case \"SET_LABEL_TYPE\":\n      if (state.ctx) {\n        canvasFields = state.canvasFields.map(canvasField => {\n          return buildCanvasField(\n            action.labelType as Printers_printers_labelType,\n            state.canvasDimensions,\n            state.ctx as CanvasRenderingContext2D,\n            canvasField\n          );\n        });\n      }\n\n      return {\n        ...state,\n        labelType: action.labelType,\n        canvasFields\n      };\n\n    default:\n      throw new Error(`Unrecognised action: ${action}`);\n  }\n};\n\nconst useLayoutReducer = (): [IState, (action: Action) => void] => {\n  const [queryParams, setQueryParams] = useQueryParams();\n  const [state, dispatch] = useReducer(reducer, queryParams, init);\n\n  useEffect(() => {\n    let newQueryParams: queryParams = {};\n\n    if (state.labelType) {\n      newQueryParams.labelType = state.labelType.name;\n    }\n\n    if (state.canvasFields) {\n      newQueryParams.printRequest = JSON.stringify(\n        buildPrintRequest(state.canvasFields)\n      );\n    }\n\n    setQueryParams(newQueryParams, true);\n  }, [setQueryParams, state.labelType, state.canvasFields]);\n\n  return [state, dispatch];\n};\n\nfunction hitCanvasField(\n  position: CanvasPosition,\n  canvasFields: CanvasField[]\n): CanvasField | undefined {\n  return canvasFields.find(canvasField => {\n    if (isCanvasTextField(canvasField)) {\n      if (\n        canvasField.rotation === Rotation.north &&\n        position.x >= canvasField.canvasX &&\n        position.x <= canvasField.canvasX + canvasField.drawnWidth &&\n        position.y <= canvasField.canvasY &&\n        position.y >= canvasField.canvasY - canvasField.drawnHeight\n      ) {\n        return true;\n      } else if (\n        canvasField.rotation === Rotation.east &&\n        position.x >= canvasField.canvasX &&\n        position.x <= canvasField.canvasX + canvasField.drawnHeight &&\n        position.y >= canvasField.canvasY &&\n        position.y <= canvasField.canvasY + canvasField.drawnWidth\n      ) {\n        return true;\n      } else if (\n        canvasField.rotation === Rotation.south &&\n        position.x <= canvasField.canvasX &&\n        position.x >= canvasField.canvasX - canvasField.drawnWidth &&\n        position.y >= canvasField.canvasY &&\n        position.y <= canvasField.canvasY + canvasField.drawnWidth\n      ) {\n        return true;\n      } else if (\n        canvasField.rotation === Rotation.west &&\n        position.x <= canvasField.canvasX &&\n        position.x >= canvasField.canvasX - canvasField.drawnHeight &&\n        position.y <= canvasField.canvasY &&\n        position.y >= canvasField.canvasY - canvasField.drawnWidth\n      ) {\n        return true;\n      }\n    } else {\n      if (\n        canvasField.rotation === Rotation.north &&\n        position.x >= canvasField.canvasX &&\n        position.x <= canvasField.canvasX + canvasField.drawnWidth &&\n        position.y >= canvasField.canvasY &&\n        position.y <= canvasField.canvasY + canvasField.drawnHeight\n      ) {\n        return true;\n      } else if (\n        canvasField.rotation === Rotation.east &&\n        position.x >= canvasField.canvasX - canvasField.drawnHeight &&\n        position.x <= canvasField.canvasX &&\n        position.y >= canvasField.canvasY &&\n        position.y <= canvasField.canvasY + canvasField.drawnWidth\n      ) {\n        return true;\n      } else if (\n        canvasField.rotation === Rotation.south &&\n        position.x >= canvasField.canvasX - canvasField.drawnWidth &&\n        position.x <= canvasField.canvasX &&\n        position.y <= canvasField.canvasY &&\n        position.y >= canvasField.canvasY - canvasField.drawnHeight\n      ) {\n        return true;\n      } else if (\n        canvasField.rotation === Rotation.west &&\n        position.x >= canvasField.canvasX &&\n        position.x <= canvasField.canvasX + canvasField.drawnHeight &&\n        position.y <= canvasField.canvasY &&\n        position.y >= canvasField.canvasY - canvasField.drawnWidth\n      ) {\n        return true;\n      }\n    }\n\n    return false;\n  });\n}\n\nfunction rotateClockWise(canvasField: CanvasField): Rotation {\n  switch (canvasField.rotation) {\n    case Rotation.east:\n      return Rotation.south;\n    case Rotation.north:\n      return Rotation.east;\n    case Rotation.south:\n      return Rotation.west;\n    case Rotation.west:\n      return Rotation.north;\n    default:\n      throw new Error(`Don't know how to rotate ${canvasField.rotation}`);\n  }\n}\n\nfunction rotateAntiClockWise(canvasField: CanvasField): Rotation {\n  switch (canvasField.rotation) {\n    case Rotation.east:\n      return Rotation.north;\n    case Rotation.north:\n      return Rotation.west;\n    case Rotation.south:\n      return Rotation.east;\n    case Rotation.west:\n      return Rotation.south;\n    default:\n      throw new Error(`Don't know how to rotate ${canvasField.rotation}`);\n  }\n}\n\nfunction setCanvasFields(state: IState, action: UpdateCanvasField) {\n  return state.canvasFields.map(canvasField => {\n    if (action.canvasField !== canvasField) {\n      return canvasField;\n    }\n\n    if (state.labelType && state.ctx) {\n      return buildCanvasField(\n        state.labelType,\n        state.canvasDimensions,\n        state.ctx,\n        Object.assign({}, canvasField, action.updates)\n      );\n    }\n\n    return canvasField;\n  });\n}\n\nexport default useLayoutReducer;\n","import { gql } from \"apollo-boost\";\n\nexport default gql`\n  query LabelTypes {\n    labelTypes {\n      name\n      width\n      height\n      displacement\n      printers {\n        hostname\n      }\n    }\n  }\n`;\n","import React from \"react\";\n\nconst Loading: React.FC = () => {\n  return (\n    <svg\n      version=\"1.1\"\n      className=\"logo loading1 fill-current text-white\"\n      viewBox=\"0 0 92 92\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <rect x=\"53.5\" y=\"0\" width=\"9\" height=\"9\" ry=\"1.8\" />\n      <rect x=\"67.5\" y=\"1\" width=\"7\" height=\"7\" ry=\"1.8\" />\n\n      <rect x=\"1\" y=\"15.5\" width=\"7\" height=\"7\" ry=\"1.8\" />\n      <rect x=\"39.75\" y=\"13.75\" width=\"10.5\" height=\"10.5\" ry=\"1.8\" />\n      <rect x=\"52.75\" y=\"13.75\" width=\"10.5\" height=\"10.5\" ry=\"1.8\" />\n      <rect x=\"81\" y=\"14.5\" width=\"9\" height=\"9\" ry=\"1.8\" />\n\n      <rect x=\"13.75\" y=\"26.75\" width=\"10.5\" height=\"10.5\" ry=\"1.8\" />\n      <rect x=\"39\" y=\"26\" width=\"12\" height=\"12\" ry=\"1.8\" />\n      <rect x=\"52\" y=\"26\" width=\"12\" height=\"12\" ry=\"1.8\" />\n\n      <rect x=\"0\" y=\"40.5\" width=\"9\" height=\"9\" ry=\"1.8\" />\n      <rect x=\"13.75\" y=\"39.75\" width=\"10.5\" height=\"10.5\" ry=\"1.8\" />\n      <rect x=\"26\" y=\"39\" width=\"12\" height=\"12\" ry=\"1.8\" />\n      <rect x=\"39\" y=\"39\" width=\"12\" height=\"12\" ry=\"1.8\" />\n      <rect x=\"65.75\" y=\"39.75\" width=\"10.5\" height=\"10.5\" ry=\"1.8\" />\n\n      <rect x=\"26\" y=\"52\" width=\"12\" height=\"12\" ry=\"1.8\" />\n      <rect x=\"52\" y=\"52\" width=\"12\" height=\"12\" ry=\"1.8\" />\n      <rect x=\"65.75\" y=\"52.75\" width=\"10.5\" height=\"10.5\" ry=\"1.8\" />\n\n      <rect x=\"13.75\" y=\"65.75\" width=\"10.5\" height=\"10.5\" ry=\"1.8\" />\n      <rect x=\"39.75\" y=\"65.75\" width=\"10.5\" height=\"10.5\" ry=\"1.8\" />\n      <rect x=\"52.75\" y=\"65.75\" width=\"10.5\" height=\"10.5\" ry=\"1.8\" />\n      <rect x=\"81.5\" y=\"68.5\" width=\"7\" height=\"7\" ry=\"1.8\" />\n\n      <rect x=\"1\" y=\"80.5\" width=\"7\" height=\"7\" ry=\"1.8\" />\n      <rect x=\"66.5\" y=\"79.5\" width=\"9\" height=\"9\" ry=\"1.8\" />\n    </svg>\n  );\n};\n\nexport default Loading;\n","import React from \"react\";\nimport _ from \"lodash\";\nimport { useLazyQuery } from \"@apollo/react-hooks\";\n\nimport LabelTypeSelector from \"./LabelTypeSelector\";\nimport ActionButtons from \"./ActionButtons\";\nimport LabelDesigner from \"./LabelDesigner\";\nimport FieldList from \"./FieldList\";\nimport useLayoutReducer from \"../hooks/layoutReducer\";\nimport { useOnDeleteKey, useSetTimeout } from \"../hooks\";\n\nimport labelTypesQuery from \"../queries/labelTypesQuery\";\nimport { LabelTypes } from \"../queries/types/LabelTypes\";\n\nimport Loading from \"./Loading\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { Layout } from \"../types/graphql-global-types\";\n\nconst SprintPlanning: React.FC = () => {\n  const [state, dispatch] = useLayoutReducer();\n  const [loadLabelTypes, { error, called, loading }] = useLazyQuery<LabelTypes>(\n    labelTypesQuery,\n    {\n      onCompleted: data => {\n        // Set the label types available\n        dispatch({ type: \"SET_LABEL_TYPES\", value: data.labelTypes });\n\n        // If there was no label type in the URL do nothing\n        if (!state?.initialQueryParams?.labelType) return;\n\n        // Otherwise find it...\n        let labelType = _.find(data.labelTypes, {\n          name: state.initialQueryParams.labelType\n        });\n\n        if (!labelType) return;\n\n        // Set it as the current label type\n        dispatch({ type: \"SET_LABEL_TYPE\", labelType });\n\n        // Build any fields from the URL too\n        state.initialQueryParams?.printRequest?.layouts?.forEach(\n          (layout: Layout) => {\n            layout?.barcodeFields?.forEach(barcodeField => {\n              dispatch({\n                type: \"ADD_CANVAS_BARCODE_FIELD\",\n                options: barcodeField\n              });\n            });\n\n            layout?.textFields?.forEach(textField => {\n              dispatch({\n                type: \"ADD_CANVAS_TEXT_FIELD\",\n                options: textField\n              });\n            });\n          }\n        );\n      }\n    }\n  );\n  // Have a delay so the loading screen doesn't look like a blip\n  useSetTimeout(loadLabelTypes, 1200);\n\n  // Delete the selected canvas field on delete/backspace (if a text field isn't active)\n  useOnDeleteKey(() => {\n    if (\n      !document.activeElement ||\n      document.activeElement.nodeName !== \"INPUT\"\n    ) {\n      dispatch({ type: \"DELETE_SELECTED_CANVAS_FIELD\" });\n    }\n  });\n\n  if (loading || !called) {\n    return (\n      <div className=\"flex w-screen h-screen items-center justify-center\">\n        <Loading />\n      </div>\n    );\n  }\n\n  if (error) return <ErrorPage />;\n\n  return (\n    <CSSTransition timeout={600} in={true} appear={true} classNames=\"fade-in\">\n      <div className=\"sprint-planning h-screen max-h-screen p-3\">\n        <h1 className=\"heading tracking-widest text-5xl font-hairline text-white text-center border-b border-yellow\">\n          SPrint\n        </h1>\n\n        <ActionButtons\n          labelType={state.labelType}\n          fields={state.canvasFields}\n        />\n\n        {/* Sanger Logo */}\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"fill-current text-yellow h-20 place-self-center\"\n          viewBox=\"0 0 899.898 309.554\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        >\n          <path d=\"M402.07 133.762c-.171-2.906-1.71-5.129-3.933-6.669-2.053-1.708-4.788-2.564-7.525-2.564-4.788 0-10.26 1.028-10.26 6.841 0 2.564 2.052 3.763 3.933 4.617 5.642 2.393 18.468 3.079 29.754 6.841 11.286 3.592 21.206 10.26 21.206 24.795 0 24.624-23.599 31.294-45.146 31.294-20.862 0-43.777-8.379-44.29-31.294h32.32c.171 3.078 1.539 5.642 4.105 7.867 1.709 1.537 4.958 2.564 9.063 2.564 4.446 0 11.456-1.71 11.456-6.841 0-5.13-2.907-6.669-18.639-9.404-25.821-4.447-36.251-12.656-36.251-27.875 0-22.402 24.11-28.215 41.895-28.215 19.153 0 42.238 5.3 43.093 28.044H402.07v-.001z\" />\n          <path d=\"M525.516 176.854c0 6.671.342 14.195 4.104 19.837h-34.542c-.855-2.393-1.368-5.984-1.196-8.38h-.343c-7.181 8.209-17.613 10.602-28.557 10.602-17.101 0-31.294-8.206-31.294-26.846 0-28.045 32.833-27.019 50.103-30.269 4.617-.854 9.234-2.221 9.234-7.866 0-5.984-5.643-8.209-11.115-8.209-10.431 0-12.482 5.301-12.655 9.064h-31.463c1.026-24.966 24.624-29.07 45.659-29.07 42.408 0 42.066 17.613 42.066 34.713l-.001 36.424zm-32.491-20.006c-4.104 2.051-8.721 3.25-13.338 4.276-7.523 1.708-11.457 3.591-11.457 9.575 0 4.104 4.446 8.209 10.602 8.209 7.696 0 13.681-4.618 14.193-13.852v-8.208zM533.179 107.94h32.662v11.286h.342c6.326-8.891 15.389-13.507 28.899-13.507 15.903 0 30.438 9.746 30.438 30.096v60.877h-33.858v-46.513c0-10.26-1.197-17.441-11.115-17.441-5.814 0-13.51 2.906-13.51 17.101v46.854h-33.858V107.94zM724.327 185.235c0 17.613-4.617 42.41-46.171 42.41-21.033 0-43.264-5.644-46.342-29.584h33.516c.342.854 1.197 2.051 1.882 3.078 2.052 3.078 5.643 6.497 9.918 6.497 10.944 0 13.339-12.994 13.339-20.348v-8.209h-.343c-5.472 7.867-13.679 12.311-23.769 12.311-26.163 0-37.963-19.494-37.963-43.264 0-23.083 13.168-42.408 38.476-42.408 9.918 0 19.323 3.934 23.256 12.996h.343V107.94h33.858v77.295zm-46.855-15.563c12.484 0 13.851-11.968 13.851-21.887 0-9.747-4.788-17.443-14.706-17.443-9.576 0-14.364 8.209-14.364 17.613 0 10.09 3.077 21.717 15.219 21.717M759.743 159.925c.855 10.089 6.669 17.27 17.272 17.27 5.472 0 11.457-2.05 14.193-6.326h31.636c-6.841 19.153-25.479 28.045-45.657 28.045-28.388 0-49.763-16.759-49.763-46.342 0-25.821 18.811-46.855 46.855-46.855 35.226 0 50.447 19.666 50.447 54.207l-64.983.001zm32.489-17.613c0-8.208-6.155-14.877-14.876-14.877-10.09 0-15.905 5.302-17.443 14.877h32.319zM828.126 107.94h32.491v14.193h.342c5.472-10.601 12.655-16.414 24.966-16.414 3.42 0 6.669.513 9.918 1.367v29.925c-3.42-1.196-6.498-2.222-13.338-2.222-13.339 0-20.52 7.867-20.52 26.848v35.055h-33.859V107.94zM365.704 224.744h-12.296v-8.633h12.296v8.633zm-12.297 3.476h12.296v32.231h-12.296V228.22zM368.687 228.221h11.862v4.099h.125c2.297-3.23 5.59-4.907 10.495-4.907 5.776 0 11.054 3.539 11.054 10.929v22.11h-12.296v-16.891c0-3.727-.435-6.335-4.036-6.335-2.112 0-4.907 1.056-4.907 6.211v17.014h-12.296l-.001-32.23zM423.792 237.598c-.061-1.056-.621-1.862-1.428-2.42-.744-.623-1.739-.934-2.732-.934-1.74 0-3.727.373-3.727 2.484 0 .933.745 1.366 1.428 1.677 2.05.87 6.707 1.117 10.806 2.485 4.1 1.305 7.701 3.727 7.701 9.005 0 8.942-8.57 11.365-16.395 11.365-7.576 0-15.898-3.044-16.083-11.365h11.736c.062 1.116.559 2.049 1.491 2.855.622.561 1.802.933 3.291.933 1.616 0 4.161-.622 4.161-2.483 0-1.864-1.055-2.425-6.769-3.417-9.377-1.614-13.165-4.596-13.165-10.122 0-8.136 8.757-10.249 15.215-10.249 6.955 0 15.34 1.926 15.65 10.185h-11.18v.001z\" />\n          <path d=\"M452.075 228.221h6.582v7.576h-6.582v11.24c0 2.983.683 4.286 3.788 4.286.931 0 1.863-.062 2.794-.187v9.316c-2.483 0-5.279.372-7.887.372-5.216 0-10.992-.807-10.992-9.625v-15.403h-5.465v-7.576h5.465v-9.811h12.297v9.812zM472.938 224.744h-12.296v-8.633h12.296v8.633zm-12.298 3.476h12.296v32.231H460.64V228.22zM492.559 228.221h6.582v7.576h-6.582v11.24c0 2.983.682 4.286 3.788 4.286.931 0 1.863-.062 2.794-.187v9.316c-2.483 0-5.279.372-7.887.372-5.217 0-10.992-.807-10.992-9.625v-15.403h-5.466v-7.576h5.466v-9.811h12.297v9.812zM534.413 260.453h-11.861v-4.099h-.125c-2.297 3.23-5.59 4.907-10.496 4.907-5.774 0-11.054-3.539-11.054-10.929v-22.11h12.296v16.891c0 3.727.435 6.335 4.038 6.335 2.111 0 4.905-1.056 4.905-6.211v-17.014h12.297v32.23zM552.25 228.221h6.582v7.576h-6.582v11.24c0 2.983.682 4.286 3.788 4.286.931 0 1.863-.062 2.794-.187v9.316c-2.483 0-5.279.372-7.887.372-5.218 0-10.992-.807-10.992-9.625v-15.403h-5.466v-7.576h5.466v-9.811h12.297v9.812zM570.938 247.101c.31 3.664 2.422 6.271 6.272 6.271 1.988 0 4.161-.744 5.154-2.296h11.489c-2.483 6.953-9.253 10.185-16.58 10.185-10.309 0-18.072-6.088-18.072-16.831 0-9.376 6.831-17.018 17.016-17.018 12.793 0 18.32 7.144 18.32 19.689h-23.599zm11.8-6.398c0-2.981-2.236-5.402-5.402-5.402-3.666 0-5.777 1.925-6.335 5.402h11.737zM432.066 59.57c-2.206-7.384-7.654-11.458-16.953-11.458-7.174 0-12.642 3.641-15.41 9.008l2.538-8.176H389.49L384.942 69.6h-.25l-4.379-20.655h-11.485L364.699 69.6h-.19l-4.866-20.655h-12.737l10.111 33.209h12.554l4.866-20.547h.19l4.738 20.547h12.561l5.962-19.193c-.122.88-.203 1.773-.203 2.687 0 11.065 7.634 17.339 17.989 17.339 7.126 0 13.563-2.958 16.392-9.299v8.466h12.175V36.465h-12.175V59.57zm-16.39-3.529c3.567 0 5.875 2.565 5.875 5.895h-12.182c.622-3.851 2.808-5.895 6.307-5.895zm16.392 16.632h-10.964c-1.062 1.611-3.303 2.375-5.306 2.375-3.986 0-6.166-2.761-6.484-6.72h22.753v4.345h.001zM598.608 75.048c-4.007 0-6.179-2.761-6.491-6.721h23.911c-.054-12.859-5.617-20.215-18.11-20.215-8.69 0-14.869 5.333-16.784 12.615v-1.414c0-5.38-2.802-11.201-11.058-11.201-4.799 0-7.749 1.719-9.435 3.384-.176.197-.365.393-.487.575-.63.65-.948 1.096-1.191 1.354-1.556-3.458-5.312-5.313-8.744-5.313-4.494 0-8.114 1.408-10.673 5.313h-.197v-4.48h-11.803v33.21h12.182v-17.99c0-3.512 1.062-6.132 4.311-6.132 3.932 0 4.175 2.998 4.175 6.132v17.989h12.25V64.165c0-3.512 1.056-6.132 4.298-6.132 3.878 0 4.189 2.998 4.189 6.132v17.989h12.182v-11.37c2.01 7.837 8.717 12.202 17.346 12.202 7.499 0 14.246-3.262 16.805-10.314H603.9c-1.049 1.611-3.296 2.376-5.292 2.376zm-.127-19.007c3.56 0 5.854 2.565 5.854 5.895h-12.162c.629-3.851 2.815-5.895 6.308-5.895zM509.875 48.112c-9.096 0-14.463 4.575-16.601 10.727-1.787-7.465-8.608-10.727-15.796-10.727-9.042 0-15.918 5.367-17.468 13.752V36.465h-12.182v45.689h12.182V69.627c1.53 8.812 8.189 13.36 17.095 13.36 7.614 0 13.888-3.79 16.209-10.68 2.166 6.118 7.519 10.68 16.561 10.68 12.175 0 17.671-8.257 17.671-17.474 0-9.205-5.495-17.401-17.671-17.401zm-27.458 20.911c-.325 2.694-1.996 4.934-5.184 4.934-3.932 0-5.374-3.066-5.374-8.385 0-4.034.995-8.439 5.624-8.439 2.876 0 4.609 1.922 4.609 5.251h10.335a21.716 21.716 0 00.054 6.639h-10.064zm27.46 4.936c-4.805 0-5.502-4.866-5.502-8.447 0-3.58.697-8.378 5.502-8.378 4.798 0 5.489 4.798 5.489 8.378 0 3.581-.69 8.447-5.489 8.447z\" />\n          <g>\n            <path d=\"M21.814 72.84H9.369a3.462 3.462 0 01-3.462-3.462V56.934a3.462 3.462 0 013.462-3.462h12.444a3.462 3.462 0 013.462 3.462v12.444a3.461 3.461 0 01-3.461 3.462zM164.38 80.372h-22.123a6.154 6.154 0 01-6.154-6.154V52.094a6.154 6.154 0 016.154-6.154h22.123a6.154 6.154 0 016.154 6.154v22.123a6.155 6.155 0 01-6.154 6.155zM207.523 30.159h-16.592a4.616 4.616 0 01-4.616-4.616V8.951a4.616 4.616 0 014.616-4.616h16.592a4.616 4.616 0 014.616 4.616v16.592a4.616 4.616 0 01-4.616 4.616zM210.289 80.372h-22.123a6.154 6.154 0 01-6.154-6.154V52.094a6.154 6.154 0 016.154-6.154h22.123a6.154 6.154 0 016.154 6.154v22.123a6.155 6.155 0 01-6.154 6.155zM251.358 26.931h-12.444a3.462 3.462 0 01-3.462-3.462V11.025a3.462 3.462 0 013.462-3.462h12.444a3.462 3.462 0 013.462 3.462v12.444a3.462 3.462 0 01-3.462 3.462zM299.341 76.068h-16.592a4.616 4.616 0 01-4.616-4.616V54.86a4.616 4.616 0 014.616-4.616h16.592a4.616 4.616 0 014.616 4.616v16.592a4.616 4.616 0 01-4.616 4.616zM23.888 167.885H7.295a4.616 4.616 0 01-4.616-4.616v-16.592a4.616 4.616 0 014.616-4.616h16.592a4.616 4.616 0 014.616 4.616v16.592a4.615 4.615 0 01-4.615 4.616zM72.562 126.28H50.439a6.154 6.154 0 01-6.154-6.154V98.003a6.154 6.154 0 016.154-6.154h22.123a6.154 6.154 0 016.154 6.154v22.123a6.154 6.154 0 01-6.154 6.154zM72.562 172.189H50.439a6.154 6.154 0 01-6.154-6.154v-22.123a6.154 6.154 0 016.154-6.154h22.123a6.154 6.154 0 016.154 6.154v22.123a6.154 6.154 0 01-6.154 6.154zM120.683 175.632H94.135a7.385 7.385 0 01-7.385-7.385v-26.548a7.385 7.385 0 017.385-7.385h26.548a7.385 7.385 0 017.385 7.385v26.548a7.385 7.385 0 01-7.385 7.385zM166.592 129.724h-26.548a7.385 7.385 0 01-7.385-7.385V95.791a7.385 7.385 0 017.385-7.385h26.548a7.385 7.385 0 017.385 7.385v26.548a7.385 7.385 0 01-7.385 7.385zM166.592 175.632h-26.548a7.385 7.385 0 01-7.385-7.385v-26.548a7.385 7.385 0 017.385-7.385h26.548a7.385 7.385 0 017.385 7.385v26.548a7.385 7.385 0 01-7.385 7.385zM212.501 129.724h-26.548a7.385 7.385 0 01-7.385-7.385V95.791a7.385 7.385 0 017.385-7.385h26.548a7.385 7.385 0 017.385 7.385v26.548a7.385 7.385 0 01-7.385 7.385zM256.197 172.189h-22.123a6.154 6.154 0 01-6.154-6.154v-22.123a6.154 6.154 0 016.154-6.154h22.123a6.154 6.154 0 016.154 6.154v22.123a6.153 6.153 0 01-6.154 6.154zM72.562 264.007H50.439a6.154 6.154 0 01-6.154-6.154V235.73a6.154 6.154 0 016.154-6.154h22.123a6.154 6.154 0 016.154 6.154v22.123a6.154 6.154 0 01-6.154 6.154zM120.683 221.541H94.135a7.385 7.385 0 01-7.385-7.385v-26.548a7.385 7.385 0 017.385-7.385h26.548a7.385 7.385 0 017.385 7.385v26.548a7.385 7.385 0 01-7.385 7.385zM164.38 264.007h-22.123a6.154 6.154 0 01-6.154-6.154V235.73a6.154 6.154 0 016.154-6.154h22.123a6.154 6.154 0 016.154 6.154v22.123a6.154 6.154 0 01-6.154 6.154zM212.501 221.541h-26.548a7.385 7.385 0 01-7.385-7.385v-26.548a7.385 7.385 0 017.385-7.385h26.548a7.385 7.385 0 017.385 7.385v26.548a7.385 7.385 0 01-7.385 7.385zM210.289 264.007h-22.123a6.154 6.154 0 01-6.154-6.154V235.73a6.154 6.154 0 016.154-6.154h22.123a6.154 6.154 0 016.154 6.154v22.123a6.154 6.154 0 01-6.154 6.154zM256.197 218.098h-22.123a6.154 6.154 0 01-6.154-6.154v-22.123a6.154 6.154 0 016.154-6.154h22.123a6.154 6.154 0 016.154 6.154v22.123a6.153 6.153 0 01-6.154 6.154zM297.267 256.475h-12.444a3.462 3.462 0 01-3.462-3.462v-12.444a3.462 3.462 0 013.462-3.462h12.444a3.462 3.462 0 013.462 3.462v12.444a3.462 3.462 0 01-3.462 3.462zM21.814 302.384H9.369a3.462 3.462 0 01-3.462-3.462v-12.444a3.462 3.462 0 013.462-3.462h12.444a3.462 3.462 0 013.462 3.462v12.444a3.461 3.461 0 01-3.461 3.462zM253.432 305.612H236.84a4.616 4.616 0 01-4.616-4.616v-16.592a4.616 4.616 0 014.616-4.616h16.592a4.616 4.616 0 014.616 4.616v16.592a4.616 4.616 0 01-4.616 4.616z\" />\n          </g>\n        </svg>\n\n        <LabelTypeSelector\n          selectedLabelType={state.labelType}\n          labelTypes={state.labelTypes}\n          dispatch={dispatch}\n        />\n\n        <LabelDesigner state={state} dispatch={dispatch} />\n\n        <FieldList\n          labelType={state.labelType}\n          layout={state.canvasFields}\n          selectedCanvasField={state.selectedCanvasField}\n          superSelectedCanvasField={state.superSelectedCanvasField}\n          dispatch={dispatch}\n        />\n      </div>\n    </CSSTransition>\n  );\n};\n\nconst ErrorPage: React.FC = () => {\n  return (\n    <CSSTransition timeout={600} in={true} appear={true} classNames=\"fade-in\">\n      <div className=\"flex flex-col w-screen h-screen items-center justify-center\">\n        <h1 className=\"text-5xl text-white\">Error :(</h1>\n        <h2 className=\"text-3xl text-white\">\n          There was an error contacting the the SPrint API\n        </h2>\n      </div>\n    </CSSTransition>\n  );\n};\n\nexport default SprintPlanning;\n","import { useEffect } from \"react\";\n\n/**\n * Hook to call a side effect after a given delay\n * @param {(...args: any[]) => void} fn The function to call\n * @param {number} delay The delay before calling the function\n */\nexport const useSetTimeout = (fn: (...args: any[]) => void, delay: number) => {\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      fn();\n    }, delay);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [fn, delay]);\n};\n\n/**\n * Hook to call a side effect on delete key\n * @param {() => void} fn\n */\nexport const useOnDeleteKey = (fn: () => void) => {\n  useEffect(() => {\n    document.addEventListener(\"keydown\", e => {\n      if (e.key === \"Backspace\" || e.key === \"Delete\") {\n        fn();\n      }\n    });\n  });\n};\n","import React from \"react\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport ApolloClient from \"apollo-boost\";\n\nimport SprintPlanning from \"./components/SprintPlanning\";\n\n// https://www.apollographql.com/docs/react/\nconst client = new ApolloClient();\n\nconst App: React.FC = () => {\n  return (\n    <ApolloProvider client={client}>\n      <SprintPlanning />\n    </ApolloProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}